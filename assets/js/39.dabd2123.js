(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{712:function(t,e,n){"use strict";n.r(e);var a=n(58),r=Object(a.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"分页器组件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#分页器组件"}},[t._v("#")]),t._v(" 分页器组件")]),t._v(" "),n("p",[t._v("今天来实现一个基础的 Pagination 分页器组件~")]),t._v(" "),n("h2",{attrs:{id:"需求"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#需求"}},[t._v("#")]),t._v(" 需求")]),t._v(" "),n("ul",[n("li",[t._v("能够根据外部传入的total(数据总数)，以每页10条数据变化页面总数。")]),t._v(" "),n("li",[t._v("页数pages小于8时，显示全部页码。")]),t._v(" "),n("li",[t._v("页数pages大于7时，自动调整显示的页码，其余页码省略代替。")]),t._v(" "),n("li",[t._v("页数pages大于7时，页码显示规则为显示当前页（current）+-2个页码以及第一页和最后一页页码。")])]),t._v(" "),n("h2",{attrs:{id:"演示"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#演示"}},[t._v("#")]),t._v(" 演示")]),t._v(" "),n("p",[t._v("不知道为啥录屏的时候不能录入鼠标的状态= =，否则会显示红色圆圈禁用和手指覆盖的图标= =")]),t._v(" "),n("p",[n("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2020/3/11/170c7b446fcfe2cc?w=471&h=141&f=gif&s=10588",alt:""}})]),t._v(" "),n("h2",{attrs:{id:"实现"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#实现"}},[t._v("#")]),t._v(" 实现")]),t._v(" "),n("p",[t._v("对于html元素，需要【上一页】【页码】【下一页】三个部分。分别用button，ul，button实现。")]),t._v(" "),n("ul",[n("li",[t._v("【上一页】需要添加禁用属性preDisable；前往上一页的点击事件goPre；")]),t._v(" "),n("li",[t._v("【页码】需要判断是否展示页码button还是省略号…；")]),t._v(" "),n("li",[t._v("【下一页】需要添加禁用属性nextDisable；前往下一页的点击事件goNext；")])]),t._v(" "),n("p",[t._v("对于组件，我们需要用到Vue的props,data,computed,watch,created,methods这些属性或钩子。")]),t._v(" "),n("ul",[n("li",[t._v("【props】接收参数数据总数total。")]),t._v(" "),n("li",[t._v("【data】定义当前页current，每页显示数据pageSize，页码列表pages，页码长度pageLength。")]),t._v(" "),n("li",[t._v("【computed】用于计算是否禁用上一页preDisable或下一页按钮nextDisable。")]),t._v(" "),n("li",[t._v("【watch】监听数据总数total的改变在计算页码列表getPagesLength();监听当前页current改变，向父组件传递参数当前页。")]),t._v(" "),n("li",[t._v("【created】初始化计算页码列表getPagesLength()。")]),t._v(" "),n("li",[t._v("【methods】计算页码列表getPagesLength()；点击页码jumpToPage (index)；上一页goPre ()；下一页goNext ()；页码是否被省略isShowBtn (index)；是否显示省略号isShowEllipsis (index)。")])]),t._v(" "),n("h2",{attrs:{id:"基础组件pagination-vue"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#基础组件pagination-vue"}},[t._v("#")]),t._v(" 基础组件pagination.vue")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('<template>\n  <div class="pagination-wrapper">\n    <button :disabled="preDisable" @click="goPre">&#60;</button> \x3c!--上一页按钮--\x3e\n    <ul>                                                         \x3c!--页码列表--\x3e\n      <li v-for="index in pages" :key="index"  ref="pages">\n        <button @click="jumpToPage(index)" v-if="isShowBtn(index)" :class="current===index?\'active\':\'\'">{{index}}</button>\n        <div v-else-if="isShowEllipsis (index)" class="ellipsis">&#8230;</div> \x3c!--省略号--\x3e\n      </li>\n    </ul>\n    <button :disabled="nextDisable" @click="goNext">&#62;</button> \x3c!--上一页按钮--\x3e\n  </div>\n</template>\n\n<script type=\'text/ecmascript-6\'>\nexport default {\n  props: {\n    total: {\n      type: Number,\n      default: 200\n    }\n  },\n  data () {\n    return {\n      current: 1, // 定义当前页current\n      pageSize: 10, // 每页显示数据pageSize\n      pages: [], // 页码列表pages\n      pageLength: 0 // 页码长度pageLength\n    }\n  },\n  computed: {\n    preDisable () { // 是否禁用上一页\n      return this.current === 1\n    },\n    nextDisable () { // 是否禁用下一页\n      return this.current === this.pageLength\n    }\n  },\n  watch: {\n    total (val) { // 监听数据总数total的改变在计算页码列表getPagesLength()\n      this.getPagesLength()\n    },\n    current (val) { // 监听当前页current改变，向父组件传递参数当前页\n      this.$emit(\'change\', val)\n    }\n  },\n  created () { // 初始化计算页码列表getPagesLength()\n    this.getPagesLength()\n  },\n  methods: {\n    getPagesLength () { // 计算页码列表\n      const more = this.total % this.pageSize ? 1 : 0\n      this.pageLength = this.total / this.pageSize + more\n      this.pages = new Array(this.pageLength)\n      for (let i = 0; i < this.pageLength; i++) {\n        this.pages[i] = i + 1\n      }\n    },\n    jumpToPage (index) { // 点击页码\n      this.current = index\n    },\n    goPre () { // 上一页\n      this.current -= this.current === 1 ? 0 : 1\n    },\n    goNext () { // 下一页\n      this.current += this.current === this.pageLength ? 0 : 1\n    },\n    isShowBtn (index) { // 页码是否被省略\n      if (this.pageLength < 8) {\n        return true\n      } else {\n        if (index === 1 || index === this.pageLength) {\n          return true\n        } else {\n          if (this.current < 4 && index < 6) {\n            return true\n          } else if (this.current > this.pageLength - 4 && index > this.pageLength - 6) {\n            return true\n          } else if (index < this.current + 3 && index > this.current - 3) {\n            return true\n          } else {\n            return false\n          }\n        }\n      }\n    },\n    isShowEllipsis (index) { // 是否显示省略号\n      return index === 2 || index === this.pageLength - 1\n    }\n  }\n}\n<\/script>\n\n<style lang="stylus" scoped>\n.pagination-wrapper\n\twidth 100%\n\tmargin 10px\n\tdisplay flex\n\tul\n\t\tdisplay flex\n\t\t.active\n\t\t\tborder solid 1px #1296db\n\t\t.ellipsis\n\t\t\tfont-weight bold\n\t\t\tcolor #999\n\t\t\tline-height 24px\n\tbutton\n\t\theight 30px\n\t\twidth 30px\n\t\tmargin 0 5px\n\t\tborder-radius 3px\n\t\tborder solid 1px #ccc\n\t\tcolor #777\n\t\tfont-weight bold\n\t\tbackground #fff\n\t\toverflow hidden\n\t\tuser-select none\n\t\t&:hover\n\t\t\tborder solid 1px #1296db\n\t\t\tcursor pointer\n\t\t&:disabled\n\t\t\tborder solid 1px #ccc\n\t\t\tcolor #ccc\n\t\t\tcursor not-allowed\n</style>\n\n')])])]),n("h2",{attrs:{id:"应用组件pagination-apply-vue"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#应用组件pagination-apply-vue"}},[t._v("#")]),t._v(" 应用组件pagination-apply.vue")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('<template>\n\t<div>\n\t\t<Pagination :total="total" @change="changePagination"></Pagination>\n\t\t<div class="desc">当前页： {{current}}</div>\n\t</div>\n</template>\n\n<script type=\'text/ecmascript-6\'>\nimport Pagination from \'base/pagination\'\nexport default {\n  data () {\n    return {\n      total: 200, // 必传传递参数total\n      current: 1\n    }\n  },\n  methods: {\n    changePagination (current) {\n      this.current = current\n    }\n  },\n  components: {\n    Pagination\n  }\n}\n<\/script>\n')])])]),n("h2",{attrs:{id:"优化"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#优化"}},[t._v("#")]),t._v(" 优化")]),t._v(" "),n("ul",[n("li",[t._v("我们可以设置鼠标覆盖时显示手指图标cursor pointer，禁用时显示红色圆圈斜线表示禁用cursor not-allowed。")]),t._v(" "),n("li",[t._v("使用user-select none来禁止用户选中按钮中的文字，优化体验。")])]),t._v(" "),n("h2",{attrs:{id:"更多推荐"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#更多推荐"}},[t._v("#")]),t._v(" 更多推荐")]),t._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://juejin.im/post/1",target:"_blank",rel:"noopener noreferrer"}},[t._v("实现基于Vue的Dialog对话框组件"),n("OutboundLink")],1)]),t._v(" "),n("li",[n("a",{attrs:{href:"https://juejin.im/post/6844904083124404232",target:"_blank",rel:"noopener noreferrer"}},[t._v("利用better-scroll实现Vue轮播图组件"),n("OutboundLink")],1)]),t._v(" "),n("li",[n("a",{attrs:{href:"https://juejin.im/post/6844904081610260488",target:"_blank",rel:"noopener noreferrer"}},[t._v("理解Vue递归组件，实现Tree树形控件实例~"),n("OutboundLink")],1)])])])}),[],!1,null,null,null);e.default=r.exports}}]);