(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{711:function(e,n,t){"use strict";t.r(n);var a=t(58),s=Object(a.a)({},(function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("p",[e._v("先来对比使用一下：\n"),t("cascader-demo")],1),e._v(" "),t("p",[e._v("在 element-ui 中，它提供的多选可搜索级联组件有一个问题：当用户选中全部子节点时不会合并为显示父节点。并且我想要级联看板一直展开。")]),e._v(" "),t("p",[e._v("要想完成这个功能，在经历过上述步骤一番探索后发现还是要修改源码才能完成。于是我基于原本多选可搜索的级联选择器，进行以下优化。")]),e._v(" "),t("p",[e._v("优化后的组件使用方法与原本还是一样：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('<template lang="pug">\n  cascader.mb-200(\n      ref="cascader",\n      :options="options",\n      placeholder="试试搜索：指南"\n      :props=`{ multiple: true }`\n      filterable\n      clearable\n      @change="changecascader"\n      @visible-change="visibleChange")\n</template>\n\n<style lang="less" scoped>\n.mb-200 {\n  margin-bottom:200\n}\n</style>\n\n')])])]),t("p",[e._v("基于原本 "),t("code",[e._v("element-ui")]),e._v(" 的多选可搜索的级联选择器，进行以下四点的优化：")]),e._v(" "),t("ul",[t("li",[e._v("默认看到级联看板展开，不会收起。需要找到源码中控制级联看板展开的方法，并在合适的时机触发。")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('@blur="blurCascader(true)" // 无法触发\n\n@visible-change="blurCascader(true)" // 可触发\n\n// 失焦后触发展开级联看板（默认失焦后关闭看板）\n\nblurCascader(e) {\n    this.$nextTick(() => {\n        // 调用组件内部的方法\n        this.$refs.cascader.toggleDropDownVisible(e)\n    })\n},\n')])])]),t("ul",[t("li",[e._v("搜索选中后展示级联看板，并勾选搜索选中的节点")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("// 响应选中的节点，选中节点后关闭选择看板，展示级联看板\nchangecascader(e) {\n  this.$refs.cascader.handleDropdownLeave()\n},\n")])])]),t("ul",[t("li",[e._v("修改：当子级节点全部选中后，"),t("code",[e._v("tag")]),e._v(" 只展示一个父级节点，而不是全部子节点")])]),e._v(" "),t("p",[e._v("用 "),t("code",[e._v("presentFormatTags")]),e._v(" 替换原本 "),t("code",[e._v("presentTags")]),e._v("，展示 "),t("code",[e._v("tag")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("// 获取所有勾选的节点\ngetPresetTags() {\n  const tree = this.panel.menus[0]\n  const result = []\n  loop(tree)\n  // 递归查找被勾选的节点\n  function loop(tree = []) {\n    for (let i = 0; i < tree.length; i++) {\n      const child = tree[i]\n      // checked表示勾选状态\n      if (child.checked) {\n        result.push({ ...child, closable: true })\n      } else if (child.indeterminate) {\n        // indeterminate表示半选中状态\n        child.children && loop(child.children)\n      }\n    }\n  }\n  // presentFormatTags 是由完全勾选的节点组成，由此生成 tag\n  this.presentFormatTags = result\n},\n")])])]),t("ul",[t("li",[e._v("关于节点的删除：由于修改了标签的展示，需要重写 "),t("code",[e._v("tag")]),e._v(" 的删除方法。修改原 "),t("code",[e._v("deleteTag")]),e._v(" 方法如下：")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("deleteTag(index, tag) {\n  let _ = this\n  if (tag && tag.hasChildren) {\n    // 父节点tag删除时，需要将其所有的子节点删除\n    loop(tag.children)\n    function loop(list) {\n      for (let i = 0; i < list.length; i++) {\n        if (list[i].hasChildren) {\n          loop(list[i].children)\n        } else {\n          _.checkedValue = _.checkedValue.filter(n => n !== list[i].path)\n          _.$emit('remove-tag', tag)\n        }\n      }\n    }\n  } else if (tag) {\n    // 如果是子节点直接删除这个节点\n    this.checkedValue = this.checkedValue.filter((n, i) => n !== tag.path)\n    this.$emit('remove-tag', tag)\n  } else {\n    // 利用输入框回车键删除\n    const temp = this.presentFormatTags[this.presentFormatTags.length - 1]\n    temp && this.deleteTag(null, temp)\n  }\n\n  // 原本代码\n  // const { checkedValue } = this\n  // const val = checkedValue[index]\n  // this.checkedValue = checkedValue.filter((n, i) => i !== index)\n  // this.$emit('remove-tag', val)\n},\n")])])]),t("p",[e._v("源码于"),t("a",{attrs:{href:"https://github.com/Gesj-yean/vue-demo-collection/tree/master/docs/.vuepress/components/cascader",target:"_blank",rel:"noopener noreferrer"}},[e._v("GitHub"),t("OutboundLink")],1)])])}),[],!1,null,null,null);n.default=s.exports}}]);