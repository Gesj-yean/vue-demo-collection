(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{708:function(t,e,n){"use strict";n.r(e);var r=n(58),a=Object(r.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"面包屑"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#面包屑"}},[t._v("#")]),t._v(" 面包屑")]),t._v(" "),n("h2",{attrs:{id:"场景"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#场景"}},[t._v("#")]),t._v(" 场景")]),t._v(" "),n("p",[t._v("在我还没有接触"),n("code",[t._v("element-UI")]),t._v("、"),n("code",[t._v("ant design vue")]),t._v("这类UI组件库的时候，还不知道什么是 "),n("strong",[t._v("面包屑")]),t._v("。很好奇为什么前端有这么个名词，后来知道原来面包屑常用的场景有后台管理系统、官网目录导航等地方，目的是为了帮用户知道当前所在的页面路径。")]),t._v(" "),n("h2",{attrs:{id:"分析"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#分析"}},[t._v("#")]),t._v(" 分析")]),t._v(" "),n("p",[t._v("用"),n("code",[t._v("vue")]),t._v("实现一个"),n("code",[t._v("breadcrumb")]),t._v("，必须要借助"),n("code",[t._v("vue-router")]),t._v("实现。其实我们的思路应该是这样子的：")]),t._v(" "),n("ul",[n("li",[t._v("在"),n("code",[t._v("router.js")]),t._v("的路由表中写好全部的前端路由；")]),t._v(" "),n("li",[n("code",[t._v("Scene1")]),t._v("：在需要使用"),n("code",[t._v("breadcrumb")]),t._v("的页面中引入基础面包屑组件；")]),t._v(" "),n("li",[n("code",[t._v("Scene2")]),t._v("：在全局布局的"),n("code",[t._v("header")]),t._v("处直接引入，页面不用单独引入；")]),t._v(" "),n("li",[t._v("根据当前浏览器"),n("code",[t._v("URL")]),t._v("匹配路由表中相应的路由信息；")]),t._v(" "),n("li",[t._v("路径变化时，"),n("code",[t._v("breadcrumb")]),t._v("生成相应的路径。")])]),t._v(" "),n("h2",{attrs:{id:"vue-router"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#vue-router"}},[t._v("#")]),t._v(" vue-router")]),t._v(" "),n("p",[t._v("由于我们的面包屑组件是根据 "),n("code",[t._v("URL")]),t._v(" 变化的，而 "),n("code",[t._v("URL")]),t._v(" 又是从路由表中得来的。因此我们需要做的是在每次进入页面时获取路由相关信息。先说一下两个常用路由相关属性："),n("code",[t._v("this.$route")]),t._v("和"),n("code",[t._v("this.$router")]),t._v("。你知道他们的区别知道是什么吗？")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("this.$route（路由信息对象）\n"),n("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2020/3/30/1712aa5c785392df?w=846&h=323&f=png&s=34400",alt:""}})])]),t._v(" "),n("li",[n("p",[t._v("this.$router（路由实例）\n"),n("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2020/3/30/1712aa9e8cb12623?w=840&h=504&f=png&s=59562",alt:""}})])])]),t._v(" "),n("h2",{attrs:{id:"实现"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#实现"}},[t._v("#")]),t._v(" 实现")]),t._v(" "),n("div",{staticClass:"language-base extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('\x3c!-- @description: 面包屑组件 --\x3e\n<template>\n  <ul class="breadcrumb-wrapper">\n    <li v-for="(item) in list" :key="item.path">\n      <router-link :to="item.path">{{item.name}}</router-link>\n    </li>\n  </ul>\n</template>\n<script type="text/ecmascript-6">\nexport default {\n  data () {\n    return {\n      list: [],\n      isShake: false\n    }\n  },\n  created () {\n    this.getPath()\n  },\n  methods: {\n    getPath () {\n      const current = this.$router.currentRoute.matched\n      for (const item of current) {\n        const temp = {}\n        temp.name = item.meta.title\n        temp.path = item.path !== \'\' ? item.path : \'/\'\n        this.list.push(temp)\n      }\n    }\n  }\n}\n<\/script>\n<style lang="stylus" scoped>\n.breadcrumb-wrapper\n  display flex\n  flex-wrap wrap\n  height 60px\n  line-height 60px\n  li\n    color #666\n    font-size 15px\n    &:not(:last-child) :after\n      content \'>\'\n      margin 0 10px\n      color #ccc\n      &:last-child\n        font-weight bold\n        color #000\na\n  text-decoration none\na:visited\n  color #666\na:hover\n  color #1296db\n</style>\n\n')])])])])}),[],!1,null,null,null);e.default=a.exports}}]);